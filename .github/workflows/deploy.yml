# .github/workflows/deploy.yml
name: Deploy to VPS on Main Push

# Required GitHub Secrets:
# - VPS_HOST: Hostname/IP of your VPS server
# - VPS_SSH_USER: SSH username for VPS access
# - VPS_SSH_PRIVATE_KEY: SSH private key (RAW content, NOT base64) used for SSH connection
# - VPS_DEPLOY_PATH: Absolute path to the root of your checked-out git repository on the VPS (e.g., /home/deploy/raffley)
# - VPS_GIT_BRANCH: The branch to pull on the VPS (usually 'main')
# - VPS_SERVICE_NAME: The name of the systemd service for your app (e.g., raffley.service)

# Important VPS Prerequisites:
# 1. Git must be installed on the VPS.
# 2. The repository must be cloned in VPS_DEPLOY_PATH.
# 3. The VPS must have network access to clone/pull from GitHub (e.g., SSH key configured if private repo).
# 4. Elixir, Erlang, Node.js (if needed), and build tools (like make, gcc) must be installed on the VPS.
# 5. Runtime secrets (DATABASE_URL, SECRET_KEY_BASE, etc.) must be configured on the VPS environment where the build/run occurs (e.g., in the systemd service file or ~/.profile for the deploy user).
# 6. The VPS_SSH_USER must have passwordless sudo privileges specifically for the systemctl command to restart the service (e.g., configure via /etc/sudoers.d/).

on:
  push:
    branches: [main] # Trigger workflow on push to the main branch

jobs:
  deploy_to_vps:
    name: Pull, Build, Migrate & Restart on VPS
    runs-on: ubuntu-latest

    steps:
      - name: Validate Secrets Presence
        run: |
          echo "Checking required secrets..."
          if [ -z "${{ secrets.VPS_HOST }}" ]; then echo "Error: VPS_HOST secret missing"; exit 1; fi
          if [ -z "${{ secrets.VPS_SSH_USER }}" ]; then echo "Error: VPS_SSH_USER secret missing"; exit 1; fi
          if [ -z "${{ secrets.VPS_SSH_PRIVATE_KEY }}" ]; then echo "Error: VPS_SSH_PRIVATE_KEY secret missing"; exit 1; fi
          if [ -z "${{ secrets.VPS_DEPLOY_PATH }}" ]; then echo "Error: VPS_DEPLOY_PATH secret missing"; exit 1; fi
          if [ -z "${{ secrets.VPS_SERVICE_NAME }}" ]; then echo "Error: VPS_SERVICE_NAME secret missing"; exit 1; fi
          echo "Required deployment secrets seem present."

      - name: Connect, Pull, Build, Migrate, Restart
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }} # IMPORTANT: Use the RAW private key content
          # port: ${{ secrets.SSH_PORT || 22 }} # Uncomment if needed
          script: |
            set -e # Exit immediately if a command exits with a non-zero status.
            export MIX_ENV=prod # Set the environment for all subsequent mix commands
            DEPLOY_PATH="${{ secrets.VPS_DEPLOY_PATH }}"
            GIT_BRANCH="${{ secrets.VPS_GIT_BRANCH || 'main' }}" # Default to main if secret not set
            SERVICE_NAME="${{ secrets.VPS_SERVICE_NAME }}" # Get service name from secret

            echo "--- Starting VPS Deployment ---"
            echo "Navigating to deployment directory: $DEPLOY_PATH"
            cd "$DEPLOY_PATH"

            echo "Ensuring correct branch ($GIT_BRANCH) is checked out..."
            git checkout "$GIT_BRANCH"

            echo "Stashing potential local changes (optional, uncomment if needed)..."
            # git stash push -m "Stashed by GitHub Actions before pull $(date)"

            echo "Pulling latest changes from origin/$GIT_BRANCH..."
            git pull origin "$GIT_BRANCH"

            echo "Applying stashed changes (optional, uncomment if stash was used)..."
            # git stash pop || echo "No stash to pop or conflict occurred (manual resolution needed)."

            echo "--- Building Application (MIX_ENV=$MIX_ENV) ---"

            echo "Fetching/updating dependencies..."
            mix deps.get --only prod

            echo "Compiling application..."
            MIX_ENV=prod mix compile

            echo "Compiling assets..."
            MIX_ENV=prod mix assets.deploy

            echo "Building release..."
            MIX_ENV=prod mix release

            echo "--- Running Database Migrations ---"
            # Adjust the path based on your app name if it differs from 'raffley'
            ./_build/prod/rel/raffley/bin/raffley eval "Raffley.Release.migrate"

            echo "--- Restarting Application Service ($SERVICE_NAME) ---"
            # Ensure VPS_SSH_USER has passwordless sudo rights for this command
            sudo systemctl restart "$SERVICE_NAME"

            echo "--- Deployment Finished Successfully ---"

