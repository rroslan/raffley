- name: Deploy to VPS via SSH
uses: appleboy/ssh-action@v1.0.3
with:
  host: ${{ secrets.VPS_HOST }}
  username: ${{ secrets.VPS_SSH_USER }}
  key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
  # Use the corrected script block below
  script: |
    # Variables
    DEPLOY_PATH="${{ secrets.VPS_DEPLOY_PATH }}" # e.g., /home/ubuntu/raffley
    RELEASE_TAR="release.tar.gz" # This file is in the current working dir transferred by ssh-action
    # --- IMPORTANT: Adjust 'raffley' below if your actual release name inside _build/prod/rel differs ---
    RELEASE_NAME="raffley" # Assuming this is the name Mix uses for the release dir
    RELEASE_DIR="$DEPLOY_PATH/_build/prod/rel/$RELEASE_NAME"

    echo "--- Stopping Raffley Service ---"
    # Add || true or similar to prevent failure if service isn't running
    sudo systemctl stop raffley.service || echo "Service already stopped or failed to stop."

    echo "--- Preparing Deployment Directory ---"
    # Ensure the base deployment path exists
    mkdir -p $DEPLOY_PATH
    # Ensure the target release directory exists and clear old contents
    mkdir -p $RELEASE_DIR
    rm -rf $RELEASE_DIR/*

    echo "--- Extracting Release ---"
    # Extract the tarball from the current directory directly into the target release directory
    # The tarball (release.tar.gz) should be in the PWD set up by ssh-action
    if [ -f "$RELEASE_TAR" ]; then
      # Use -C to change directory *for extraction*
      tar -xzf $RELEASE_TAR -C $RELEASE_DIR
      echo "--- Cleaning up transferred tarball ---"
      # Remove the tarball from the current working directory
      rm $RELEASE_TAR
    else
      echo "ERROR: Release tarball $RELEASE_TAR not found in workspace!"
      exit 1 # Exit script if tarball isn't found
    fi

    echo "--- Running Database Migrations ---"
    # Ensure the user running the service (or sudo) has necessary ENV VARS
    # Check your systemd unit file for EnvironmentFile or Environment directives
    # Using sudo directly might work if the service user is correctly configured
    # Make sure the executable path is correct: $RELEASE_DIR/bin/$RELEASE_NAME
    sudo $RELEASE_DIR/bin/$RELEASE_NAME eval "Raffley.Release.migrate"

    echo "--- Reloading Systemd ---"
    # Reload systemd in case the service file itself was part of the deploy (or just good practice)
    sudo systemctl daemon-reload

    echo "--- Starting Raffley Service ---"
    sudo systemctl start raffley.service

    echo "--- Deployment Complete ---"
    # Optional: Check status briefly
    sleep 5 # Give it a moment to start
    sudo systemctl status raffley.service --no-pager || echo "Service status check failed."
